name: ur5e_workstation

services:
  ur5e_workstation_gpu:
    image: ur5e_ws:latest
    container_name: ur5e_workstation_gpu
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      - DISPLAY=:0
      # Add these environment variables for Gazebo
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - QT_X11_NO_MITSHM=1
      # Add these for better graphics performance
      - LIBGL_ALWAYS_INDIRECT=0
      - __GLX_VENDOR_LIBRARY_NAME=nvidia
    volumes:
      - ../:/home/ubuntu/ws
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
      - /tmp/.X11-unix:/tmp/.X11-unix
    runtime: nvidia  # Add this line for NVIDIA container runtime
    privileged: true  # This might be needed for hardware acceleration
    network_mode: host  # Often helps with ROS networking
    stdin_open: true
    tty: true
    restart: always
    deploy: 
      resources: 
        reservations: 
          devices: 
            - driver: nvidia
              count: all 
              capabilities: [gpu, utility, compute, graphics]  # Extended capabilities
    healthcheck:
      test: ["CMD", "pgrep", "ros"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles: ["gpu"] # Add profile for GPU
  
  ur5e_workstation_cpu:
    image: ur5e_ws:latest
    container_name: ur5e_workstation_cpu
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      - DISPLAY=:0
      - QT_X11_NO_MITSHM=1
    volumes:
      - ../:/home/ubuntu/ws
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
      - /tmp/.X11-unix:/tmp/.X11-unix
    privileged: true  # This might be needed for hardware acceleration
    network_mode: host  # Often helps with ROS networking
    stdin_open: true
    tty: true
    restart: always
    healthcheck:
      test: ["CMD", "pgrep", "ros"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles: ["cpu"] # Add profile for CPU